---
name: Integration Tests
on:
  pull_request:
    paths:
      - "action.yaml"
      - ".github/workflows/integration-tests.yaml"
  push:
    branches:
      - main
    paths:
      - "action.yaml"
      - ".github/workflows/integration-tests.yaml"

jobs:
  test:
    name: Test ${{ matrix.test.title }}
    # These permissions are needed to:
    # - Checkout the repo
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test:
          - title: Merge Commit
            commit-sha: ${{ github.sha }}
            from-scratch: true
          - title: Head Commit
            commit-sha: ${{ github.event.pull_request.head.sha }}
    steps:
      - name: Job started at
        id: job-started
        run: |
          job_started_at="$(date --utc --iso-8601=seconds)"
          echo "at=$job_started_at" | tee -a "$GITHUB_OUTPUT"
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.test.commit-sha }}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - uses: ./
        id: build
        with:
          image-repository: ghcr.io/beacon-biosignals/temporary/whalesay
          context: test
          build-args: |
            DEBIAN_VERSION=12.9
          from-scratch: ${{ matrix.test.from-scratch || 'false' }}
      - name: Validate image works
        run: |
          docker pull "${{ steps.build.outputs.image }}"
          output="$(docker run "${{ steps.build.outputs.image }}")"
          if [[ "$(wc -l <<<"$output")" -lt 14 ]]; then
              echo "$output"
              exit 1
          fi
          debian_version="$(docker run --entrypoint=/bin/cat "${{ steps.build.outputs.image }}" /etc/debian_version)"
          [[ "$debian_version" == "12.9" ]] || exit 2
      - name: Layer created at
        id: layer-created
        run: |
          layer_created_at="$(docker run --entrypoint=/bin/cat "${{ steps.build.outputs.image }}" /etc/layer-created-at)"
          echo "at=$layer_created_at" | tee -a "$GITHUB_OUTPUT"
      - name: Validate layer caching
        if: ${{ matrix.test.from-scratch == 'false' }}
        run: |
          [[ "$(date -d "$layer_created_at" +%s)" -lt "$(date -d "$job_started_at" +%s)" ]] || exit 1
        env:
          job_started_at: ${{ steps.job-started.outputs.at }}
          layer_created_at: ${{ steps.layer-created.outputs.at }}
      - name: Validate no layer caching
        if: ${{ matrix.test.from-scratch == 'true' }}
        run: |
          [[ "$(date -d "$layer_created_at" +%s)" -gt "$(date -d "$job_started_at" +%s)" ]] || exit 1
        env:
          job_started_at: ${{ steps.job-started.outputs.at }}
          layer_created_at: ${{ steps.layer-created.outputs.at }
      - name: Validate cache images
        run: |
          docker manifest inspect "${{ steps.build.outputs.image-repository }}:cache-sha-${{ matrix.test.commit-sha }}"
          docker manifest inspect "${{ steps.build.outputs.image-repository }}:cache-branch-${branch//[^[:alnum:]]/-}"
        env:
          branch: ${{ github.head_ref || (github.ref_type == 'branch' && github.ref_name) }}
      - name: Validate annotations
        run: |
          set -x
          json="$(docker manifest inspect "${{ steps.build.outputs.image }}")"
          [[ "$(jq -r '.annotations."org.opencontainers.image.revision"' <<<"$json")" == "${{ matrix.test.commit-sha }}" ]] || exit 1

  cleanup:
    name: Cleanup
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: dataaxiom/ghcr-cleanup-action@cd0cdb900b5dbf3a6f2cc869f0dbb0b8211f50c4  # v1.0.16
        with:
          package: temporary/whalesay
          older-than: 1 day
          keep-n-tagged: 0
          exclude-tags: branch-main,cache-branch-main
